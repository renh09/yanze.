<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on yanze.pro</title>
    <link>/post/</link>
    <description>Recent content in Posts on yanze.pro</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jul 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to call child component method from parent? </title>
      <link>/post/july-01-19-how-to-call-child-component-method-from-parent/</link>
      <pubDate>Mon, 01 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/july-01-19-how-to-call-child-component-method-from-parent/</guid>
      <description>Prevent using string references (react/no-string-refs) Currently, two ways are supported by React to refer to components. The first way, providing a string identifier, is now considered legacy in the official documentation. The documentation now prefers a second method &amp;ndash; referring to components by setting a property on the this object in the reference callback.
Rule Details The following patterns are considered warnings:
var Hello = createReactClass({ render: function() { return &amp;lt;div ref=&amp;quot;hello&amp;quot;&amp;gt;Hello, world.</description>
    </item>
    
    <item>
      <title>React setState() with prevState and Object Spread Operator</title>
      <link>/post/may-15-19-react-setstate-with-prevstate-and-object-spread-operator/</link>
      <pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/may-15-19-react-setstate-with-prevstate-and-object-spread-operator/</guid>
      <description>???</description>
    </item>
    
    <item>
      <title>How to filter an array with another array</title>
      <link>/post/feb-05-19-how-to-filter-an-array-with-another-array/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>/post/feb-05-19-how-to-filter-an-array-with-another-array/</guid>
      <description>Reference link How to filter an array with another array
Example 1 var array1 = [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;d&amp;quot;, &amp;quot;e&amp;quot;]; var array2 = [&amp;quot;b&amp;quot;, &amp;quot;d&amp;quot;, &amp;quot;f&amp;quot;]; array1 = array1.filter(function(item) { return !array2.includes(item); }); console.log(array1); // [ &#39;a&#39;, &#39;c&#39;, &#39;e&#39; ] console.log(array2); // [ &#39;b&#39;, &#39;d&#39;, &#39;f&#39; ]  Example 2 var array1 = [&amp;quot;a&amp;quot;, &amp;quot;b&amp;quot;, &amp;quot;c&amp;quot;, &amp;quot;d&amp;quot;, &amp;quot;e&amp;quot;]; var array2 = [&amp;quot;b&amp;quot;, &amp;quot;d&amp;quot;, &amp;quot;f&amp;quot;]; var tempArr = array2.filter(function(item) { return !</description>
    </item>
    
    <item>
      <title>React setState() with prevState and Object Spread Operator</title>
      <link>/post/11-04-17-everything-you-should-know-about-npm/</link>
      <pubDate>Sat, 04 Nov 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/11-04-17-everything-you-should-know-about-npm/</guid>
      <description>???</description>
    </item>
    
  </channel>
</rss>